generator client {
  provider = "prisma-client-js"
  // previewFeatures = ["orderByRelation", "selectRelationCount"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model sys_error {
  code       String    @db.VarChar(16)
  lang       String    @default("kr") @db.VarChar(8)
  status     Int
  var        String?   @db.VarChar(32)
  text       String    @db.VarChar(64)
  remark     String    @db.VarChar(64)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @updatedAt @db.Timestamptz(6)

  @@id([code, lang])
}

model sys_file {
  file_type    String   @id @db.VarChar(32)
  pre_fix      String   @db.VarChar(4)
  serial_no    Int
  serial_digit Int
  created_at   DateTime @default(now()) @db.Timestamptz(6)
}

model news_category {
  idx        Int      @id @default(autoincrement())
  title      String   @db.VarChar(32)
  created_at DateTime @default(now()) @db.Timestamptz(6)
  news       news[]
}

model news {
  idx          Int           @id @default(autoincrement())
  category_idx Int
  title        String        @db.VarChar(128)
  content      String
  views        Int           @default(0)
  created_at   DateTime      @default(now()) @db.Timestamptz(6)
  updated_at   DateTime?     @updatedAt @db.Timestamptz(6)
  deleted_at   DateTime?     @db.Timestamptz(6)
  category     news_category @relation(fields: [category_idx], references: [idx])
}

model project_types {
  idx        Int        @id @default(autoincrement())
  name       String     @db.VarChar(64)
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  deleted_at DateTime?  @db.Timestamptz(6)
  projects   projects[]
}

model projects {
  idx        Int              @id @default(autoincrement())
  type_idx   Int
  title      String           @db.VarChar(64)
  sub_title  String           @db.VarChar(64)
  when       String           @db.VarChar(32)
  location   String           @db.VarChar(32)
  organizer  String           @db.VarChar(32)
  operate    String?          @db.VarChar(32)
  support    String?          @db.VarChar(32)
  created_at DateTime         @default(now()) @db.Timestamptz(6)
  updated_at DateTime?        @updatedAt @db.Timestamptz(6)
  type       project_types    @relation(fields: [type_idx], references: [idx])
  images     project_images[]
}

model project_images {
  idx         Int       @id @default(autoincrement())
  project_idx Int
  bucket      String
  key         String
  hash        String?
  list_order  Int       @default(0)
  created_at  DateTime  @default(now()) @db.Timestamptz(6)
  updated_at  DateTime? @updatedAt @db.Timestamptz(6)
  project     projects  @relation(fields: [project_idx], references: [idx])
}

model history_title {
  idx        Int       @id @default(autoincrement())
  title      String    @db.VarChar(32)
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime? @updatedAt @db.Timestamptz(6)
  list_order Int       @default(0)
  histories  history[]
}

model history {
  idx        Int           @id @default(autoincrement())
  title_idx  Int
  content    String
  created_at DateTime      @default(now()) @db.Timestamptz(6)
  updated_at DateTime?     @updatedAt @db.Timestamptz(6)
  list_order Int           @default(0)
  title      history_title @relation(fields: [title_idx], references: [idx])
}

model contact {
  idx        Int      @id @default(autoincrement())
  organizer  String   @db.VarChar(64)
  name       String   @db.VarChar(32)
  tel        String   @db.VarChar(32)
  email      String   @db.VarChar(62)
  budget     String   @db.VarChar(62)
  content    String
  created_at DateTime @default(now()) @db.Timestamptz(6)
}
